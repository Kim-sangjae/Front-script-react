다크모드
(로컬스토리지에 모드 저장해서 불러오기)


<h1>다크테마</h1>

<style>
    .dark-mode{
        background-color: black;
        color: white;
    }
</style>

<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga minima qui suscipit praesentium nobis dignissimos ea architecto repellendus amet, adipisci impedit illum sed consequatur, recusandae nam tenetur reprehenderit corrupti! Quo!</p>

<input type="checkbox" name="" id="checkbox">
<label for="checkbox">다크모드 사용</label>



<script>
    var checkbox = document.getElementById('checkbox');
    
    //로컬스토리지 키값의 벨류를 담는다
    var isDarkMode = localStorage.getItem('darken');


    // 체크박스의 체크 상태가 바뀔 때
    checkbox.addEventListener('change',(e)=>{
        var checked = e.target.checked;

        console.log(checked);

        if(checked){
            document.body.classList.add('dark-mode');

            //localStorage.setItem(key,value)
            //로컬스토리지에는 문자열 타입의 데이터만 저장할 수 있다.
            //현재 value값에는 현재시간을 저장했다 (별의미는 없음)
            localStorage.setItem('darken',new Date().toLocaleString());

        }else{

            document.body.classList.remove('dark-mode');

            // 스토리지 데이터지우기
            //localStorage.removeItem(key);
            localStorage.removeItem('darken');
            
        }

    })

    if(isDarkMode!=null){
        document.body.classList.add('dark-mode');
        checkbox.checked = true;
    }

</script>




============================

============================
// 자바스크립트에서 true 조건에 어떤 문자라도 값이 있으면 true 이다

ex)

if(""){ // false
}

if("asd"){ // true
}

if(isDarkMode){
        document.body.classList.add('dark-mode');
        checkbox.checked = true;
    }
================================================================
Sticky Notes
메모장 + 새로열기


<h1>Sticky Notes</h1>

<style>
    *{
        box-sizing: border-box;
    }

    #container{
        display: grid;
        grid-template-columns: repeat(2,minmax(0,1fr));
        gap: 1rem;
        max-width: 640px;
        margin: auto;
    }

    textarea{
        background-color: #eee;
        padding: 1rem;
        height: 12rem;
        resize: none;
        border: 1px dashed gray;
        outline: none;
    }

    #add-btn{
        font-size: 4rem;
        height: 12rem;
        background-color: #aaa;
        border: none;
        cursor: pointer;
        color: #fff;
    }

    #add-btn:hover{
        background-color: #888;
    }

</style>


<div id="container">
    <button id="add-btn">+</button>
</div>



<script>
    var container = document.getElementById('container');
    var addBtn = document.getElementById('add-btn');

    //DOMContentLoaded : 문서가 로드되는 이벤트
    window.addEventListener('DOMContentLoaded',getNotes);
    addBtn.addEventListener("click",addNote);


    // 스토리지에서 객체정보(노트) 가져오기
    function getNotes(){
        var notes = getDocs(); // 로컬스토리지부터 데이터를 가져온다
        
        //노트엘리먼트를 만든다
        for(var i = 0 ; i < notes.length; i++){
            createNoteElement(notes[i].id,notes[i].content);
        }
    }





    //  노트객체추가
    function addNote(){

        var notes = getDocs(); // 노트데이터가 없으면 빈배열을 리턴한다
        var newNote = {id:'n' + Date.now(), content:''};

        notes.push(newNote);
        console.log(notes);

        saveDoc(notes);

        createNoteElement(newNote.id,newNote.content);
        
        
    }


    // 스토리지에 저장 key , value
    function saveDoc(notes){
        // JSON.stringify(객체) : 객체를 json 포맷(문자열)으로 변환한다
        localStorage.setItem('notes',JSON.stringify(notes));
    }

    // 로컬스토리지에서 데이터를 가저온다
    function getDocs(){
        if(!localStorage.getItem('notes')){
            // 노트 데이터가 없으면 빈배열을 저장한다
            localStorage.setItem('notes','[]');
        }

        // JSON.parse(JSON포맷) : JSON 포맷(문자열)을 객체로 변환한다
        return JSON.parse(localStorage.getItem('notes'));
    }


    // 노트 엘리먼트를 만드는 함수
    function createNoteElement(id,content){

        // 자바스크립트에서 엘리먼트(태그)를 추가하는 메서드
        // document.createElement
        var noteElement = document.createElement('textarea');

        noteElement.value = content;

        // 엘리먼트에 이벤트 리스너를 연결한다
        // change: textarea의 value가 바뀌었을 떄
        noteElement.addEventListener('change',(e)=>editNote(id,e.target.value)); 
        // dblclick : 더블 클릭 했을때
        noteElement.addEventListener('dblclick',(e)=>deleteNote(id,e.target)); 


        // 엘리먼트를 HTML에 주입
        // insertBefore 특정 엘리먼트 앞에 추가
        // container.insertBefore - container 앞에 추가된다
        container.insertBefore(noteElement,addBtn);
        
    }



    // 노트 편집함수
    function editNote(id,content){
        console.log(id,content)
    }


    // 노트 삭제 함수
    function deleteNote(id,noteElement){

        //container의 child (textarea) 를 삭제
        container.removeChild(noteElement);
        console.log(id,noteElement)
    }




</script>