/*
  데이터 가져오기(fetch data)

  1. useEffect Hook
  2. 데이터 가져오기 예시
*/

/*
  useEffect
  리액트 앱에서 여러가지 효과를 적용할 때 사용한다

  useEffect(effect): 컴포넌트가 렌더링 될 때마다 effect를 실행한다
  useEffect(effect,[]) : 최초 렌더링 시에만 effect가 실행된다
  useEffect(effect,[dep1,dep2, ...]) : 최초 렌더링 시에 effect가 실행된다.
  dependency가 바뀔 때 effect 가 실행된다

*/


// function Snippet(){

//   const [count,setCount] = useState(0);

//   useEffect(()=>{
//     console.log('rendered at', new Date().toLocaleTimeString());

//   },[]);

//   return (
//     <>
//       <h1>useEffect</h1>
//       <p>{count}</p>
//       <button onClick={()=> setCount(count + 1)}>
//         ADD
//       </button>
//     </>

//   )
// }


---------------------------------------------------------------------------------------

// 데이터를 서버에 요청하는 함수
function fetchData(){
  const DATA = {
    username: "안녕토끼",
    image:"https://item.kakaocdn.net/do/22123a4d3901f1c18f93ba6c3626fe3e8f324a0b9c48f77dbce3a43bd11ce785",
    bio: "하이하이"
  }


  // 데이터를 가져오는데 2초가 걸린다고 가정

  const promise = new Promise((res,rej)=>{

    setTimeout(()=>{
      res(DATA)
    },2000)

  })

  return promise;


}



function Snippet(){
  const[error,setError] = useState(null);
  const[isLoaded,setIsLoaded] = useState(false);
  const[profile,setProfile] = useState(null);

  useEffect(()=>{
    // 여기서 서버에 요청

    fetchData()
    .then(data => {
      setProfile(data)
    }) // 응답을 성공했을때 메서드
    .catch(error => {
      setError(error)
    }) // 응답을 실패했을때 메서드
    .finally(()=>{
      setIsLoaded(true)
    })
  },[])

  if(error) {
    return <p>fetching profile....</p>
  }
  if(!isLoaded){
    return <p>feching profile...</p>
  }

  return (
    <>
    <h1 align="center">Profile</h1>
      <div align="center" >
    <img 
      src={profile.image}
      alt={profile.username}
      style={{
        width: '300px',
        height: '300px',
        objectFit:'cover',
        borderRadius: '40%',
        
      }}  />
      </div>
      <h3 align="center">{profile.username}</h3>
      <p align="center">{profile.bio}</p>
    
    </>
  )
}

===================================================
=====================================================
todo 리스트 만들기

npx todo app 콘솔에서 설치

npx create-react-app todo-app
cd todo-app
npm start
src -> app.js 에서 작성